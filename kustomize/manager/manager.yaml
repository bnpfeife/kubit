apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubit
  namespace: kubit
  labels:
    control-plane: kubit
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: kubit
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kubit
    app.kubernetes.io/part-of: kubit
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: kubit
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: kubit
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: controller:latest
          name: manager
          env:
            - name: KUBIT_KUBIT_IMAGE
              value: controller:latest
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          # TODO(user): Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
      serviceAccountName: kubit
      terminationGracePeriodSeconds: 10
